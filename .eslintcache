[{"/Volumes/Samsung_T5/Dev/React/scoreboard/src/index.js":"1","/Volumes/Samsung_T5/Dev/React/scoreboard/src/App.js":"2","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Login.js":"3","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/CustomButton.js":"4","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/SignUp.js":"5","/Volumes/Samsung_T5/Dev/React/scoreboard/src/api/Firebase.js":"6","/Volumes/Samsung_T5/Dev/React/scoreboard/src/State.js":"7","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Dashboard.js":"8","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/Navbar.js":"9","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/EmptyCard.js":"10","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/AddGame.js":"11","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/GameItem.js":"12","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/FloatingButton.js":"13","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Game.js":"14"},{"size":221,"mtime":1610442671910,"results":"15","hashOfConfig":"16"},{"size":806,"mtime":1614837078060,"results":"17","hashOfConfig":"16"},{"size":2354,"mtime":1611553534730,"results":"18","hashOfConfig":"16"},{"size":396,"mtime":1610447038930,"results":"19","hashOfConfig":"16"},{"size":3328,"mtime":1610526538570,"results":"20","hashOfConfig":"16"},{"size":2612,"mtime":1612510040970,"results":"21","hashOfConfig":"16"},{"size":227,"mtime":1611553523140,"results":"22","hashOfConfig":"16"},{"size":2193,"mtime":1614834891520,"results":"23","hashOfConfig":"16"},{"size":1018,"mtime":1614837265050,"results":"24","hashOfConfig":"16"},{"size":425,"mtime":1612490044710,"results":"25","hashOfConfig":"16"},{"size":3874,"mtime":1614832825520,"results":"26","hashOfConfig":"16"},{"size":960,"mtime":1614833073380,"results":"27","hashOfConfig":"16"},{"size":350,"mtime":1612509654240,"results":"28","hashOfConfig":"16"},{"size":313,"mtime":1614839211240,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"13l0r70",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Samsung_T5/Dev/React/scoreboard/src/index.js",[],["63","64"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/App.js",["65"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Login.js",["66","67"],"import React, { useState, useEffect } from 'react';\nimport '../css/Login.css';\nimport CustomButton from '../components/CustomButton';\nimport { useHistory } from 'react-router-dom';\nimport { IsLoggedIn, logUserIn } from '../api/Firebase';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\n\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const [user, setUser] = useRecoilState(userToken);\n\n    const login = () => {\n        logUserIn(username, password, (error) => {\n            setError('Error: ' + error.code + ' :: ' + error.message);\n        })\n    }\n\n    useEffect(() => {\n        IsLoggedIn(u => {\n            console.log(\"logged In user: \", u);\n            setUser(u);\n            history.push(\"/dashboard\")\n        }, () => {\n            console.log(\"no logged In user\");\n            setUser('none');\n            history.push(\"/\");\n        })\n    }, []);\n\n    const updateUsername = e => {\n        setUsername(e.target.value);\n        setError('');\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n        setError('');\n    }\n\n    const signUp = () => {\n        history.push('/SignUp');\n    }\n\n    let history = useHistory();\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-card\">\n                <div className=\"login-card-header\">\n                    <h3>Login</h3>\n                </div>\n\n                <div className=\"login-card-main\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" placeholder=\"Username\" value={username} onChange={updateUsername} />\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={updatePassword} />\n                    <CustomButton className=\"login-button\" width=\"50%\" onClick={login}>Login</CustomButton>\n                </div>\n\n                <div className=\"login-card-footer\">\n                    <p className=\"login-link\" onClick={signUp}>Sign up</p>\n                    <p className=\"login-error\">{error}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/CustomButton.js",["68","69"],"import React, { Children } from 'react';\nimport '../css/CustomButton.css';\n\nconst CustomButton = ({ children, width, onClick, className }) => {\n\n    const clicked = () => {\n        onClick();\n    }\n\n\n    return (\n        <div className={\"button-container\" + \" \" + className} style={{ width: width }} onClick={clicked} >\n            {children}\n        </div>\n    );\n}\n\nexport default CustomButton;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/SignUp.js",["70"],"import React, { useState } from 'react';\nimport '../css/SignUp.css';\nimport CustomButton from '../components/CustomButton';\nimport { useHistory } from 'react-router-dom';\nimport { createUser, createProfile } from '../api/Firebase';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\n\n\nconst SignUp = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirm, setConfirm] = useState('');\n    const [error, setError] = useState('');\n\n    const [user, setUser] = useRecoilState(userToken);\n    let history = useHistory();\n\n    const signup = () => {\n        //validation\n        if (validation() === 1) {\n            setError(\"Please fill all fields\");\n            return;\n        }\n        if (validation() === 2) {\n            setError(\"Both passwords must match\");\n            return;\n        }\n\n        //create the user\n        createUser(username, password, (myUser) => {\n\n            //save the user token globally\n            setUser(myUser);\n\n            //create Profile\n            let data = {\n                email: username,\n                imageUrl: \"no image set\"\n            };\n\n            createProfile(myUser.user.uid, data, docRef => {\n                //profile created\n                history.push(\"/\");\n            }, error => {\n                setError(\"Error creating profie\");\n                console.log(\"Profile Error: \", error);\n            });\n        }, error => {\n            //Handle any errors\n            setError(\"Error: \" + error.code + \" :: \" + error.message);\n\n\n        });\n    }\n\n    const updateUsername = e => {\n        setUsername(e.target.value);\n        setError('');\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n        setError('');\n    }\n\n    const updateConfirm = e => {\n        setConfirm(e.target.value);\n        setError('');\n    }\n\n    const validation = () => {\n        if (username.trim() === '') return 1;\n        if (password.trim() === '') return 1;\n        if (confirm.trim() === '') return 1;\n        if (confirm !== password) return 2;\n\n        return 0;\n    }\n\n    return (\n        <div className=\"signup-container\">\n            <div className=\"signup-card\">\n                <div className=\"signup-card-header\">\n                    <h3>Sign Up</h3>\n                </div>\n\n                <div className=\"signup-card-main\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" placeholder=\"Username\" value={username} onChange={updateUsername} />\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={updatePassword} />\n                    <label htmlFor=\"confirm\" >Confirm Password</label>\n                    <input id=\"confirm\" type=\"password\" placeholder=\"Confirm Password\" value={confirm} onChange={updateConfirm} />\n                    <CustomButton className=\"signup-button\" width=\"50%\" onClick={signup}>Sign Up</CustomButton>\n                </div>\n\n                <div className=\"signup-card-footer\">\n                    <p className=\"signup-error\">{error}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/api/Firebase.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/State.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Dashboard.js",["71","72","73"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/Navbar.js",["74","75","76"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/EmptyCard.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/AddGame.js",["77"],"import React, { useState } from 'react';\nimport '../css/AddGame.css';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport CustomButton from './CustomButton';\nimport { addGame } from '../api/Firebase';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\n\nconst AddGame = ({ onClose }) => {\n    const [name, setName] = useState('');\n\n    const [highest, setHighest] = useState(false);\n    const [lowest, setLowest] = useState(false);\n    const [first, setFirst] = useState(false);\n    const [last, setLast] = useState(false);\n\n    const [user, setUser] = useRecoilState(userToken);\n\n    const [error, setError] = useState('');\n\n    const updateName = (e) => {\n        setName(e.target.value);\n        setError('');\n    }\n\n    const closeDialog = () => {\n        onClose();\n    }\n\n    const selectRadioButton = num => {\n        setError('');\n        setHighest(false);\n        setLowest(false);\n        setFirst(false);\n        setLast(false);\n        if (num === 0) setHighest(true);\n        if (num === 1) setLowest(true);\n        if (num === 2) setFirst(true);\n        if (num === 3) setLast(true);\n    }\n\n    const add = () => {\n        if (name.trim() === '') {\n            setError(\"Please enter a name.\");\n            return;\n        }\n\n        let type = 'Highest Score';\n\n        if (lowest) type = 'Lowest Score';\n        if (first) type = 'First to Score';\n        if (last) type = 'Last to Score';\n\n        const data = {\n            name: name,\n            type: type,\n            players: [],\n            leader: 'none',\n        }\n\n        //add the game\n        addGame(user.uid, data, () => {\n            console.log(\"Game successfully added\");\n            onClose();\n        }, (error) => {\n            console.log(\"Error:: \", error);\n            setError(error.code);\n        });\n\n    }\n\n    return (\n        <div className=\"add-container\">\n            <div className=\"add-card\">\n                <AiFillCloseCircle className=\"add-close\" onClick={closeDialog} />\n                <h4>Add Game</h4>\n                <label htmlFor=\"name\">Name</label>\n                <input id=\"name\" type=\"text\" placeholder=\"Name\" value={name} onChange={updateName} />\n\n                <div className=\"add-radio-group\">\n                    <h4>Type</h4>\n                    <div className=\"add-radio\" onClick={() => { selectRadioButton(0) }}>\n                        Highest Score\n                        <div className=\"radio-button\">\n                            {highest ? <div className=\"selected\"></div> : null}\n                        </div>\n                    </div>\n                    <div className=\"add-radio\" onClick={() => { selectRadioButton(1) }}>\n                        Lowest Score\n                        <div className=\"radio-button\">\n                            {lowest ? <div className=\"selected\"></div> : null}\n                        </div>\n                    </div>\n                    <div className=\"add-radio\" onClick={() => { selectRadioButton(2) }}>\n                        First to Score\n                        <div className=\"radio-button\">\n                            {first ? <div className=\"selected\"></div> : null}\n                        </div>\n                    </div>\n                    <div className=\"add-radio\" onClick={() => { selectRadioButton(3) }}>\n                        Last to Score\n                        <div className=\"radio-button\">\n                            {last ? <div className=\"selected\"></div> : null}\n                        </div>\n                    </div>\n                </div>\n\n                {error !== '' ? <div className=\"add-error\">\n                    <p >{error}</p>\n                </div> : null}\n\n                <CustomButton onClick={add} className=\"add-button\" width=\"80%\">Add</CustomButton>\n            </div>\n        </div>\n    );\n}\n\nexport default AddGame;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/GameItem.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/FloatingButton.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Game.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":7,"column":3,"nodeType":"85","messageId":"86","endLine":7,"endColumn":7},{"ruleId":"83","severity":1,"message":"87","line":15,"column":12,"nodeType":"85","messageId":"86","endLine":15,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":33,"column":8,"nodeType":"90","endLine":33,"endColumn":10,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"92","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":12,"column":44,"nodeType":"95","messageId":"96","endLine":12,"endColumn":45},{"ruleId":"83","severity":1,"message":"87","line":16,"column":12,"nodeType":"85","messageId":"86","endLine":16,"endColumn":16},{"ruleId":"83","severity":1,"message":"97","line":17,"column":18,"nodeType":"85","messageId":"86","endLine":17,"endColumn":25},{"ruleId":"88","severity":1,"message":"98","line":49,"column":8,"nodeType":"90","endLine":49,"endColumn":10,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":56,"column":26,"nodeType":"95","messageId":"102","endLine":56,"endColumn":28},{"ruleId":"83","severity":1,"message":"103","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":10,"column":18,"nodeType":"85","messageId":"86","endLine":10,"endColumn":25},{"ruleId":"88","severity":1,"message":"104","line":19,"column":8,"nodeType":"90","endLine":19,"endColumn":10,"suggestions":"105"},{"ruleId":"83","severity":1,"message":"97","line":17,"column":18,"nodeType":"85","messageId":"86","endLine":17,"endColumn":25},{"ruleId":"83","severity":1,"message":"106","line":7,"column":11,"nodeType":"85","messageId":"86","endLine":7,"endColumn":13},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["109"],"'Children' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["110"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["111"],"'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [history, setUser]",{"range":"118","text":"119"},"Update the dependencies array to be: [user.uid]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, user]",{"range":"122","text":"123"},[1010,1012],"[history, setUser]",[1388,1390],"[user.uid]",[518,520],"[history, user]"]