[{"/Volumes/Samsung_T5/Dev/React/scoreboard/src/index.js":"1","/Volumes/Samsung_T5/Dev/React/scoreboard/src/App.js":"2","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Login.js":"3","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/CustomButton.js":"4","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/SignUp.js":"5","/Volumes/Samsung_T5/Dev/React/scoreboard/src/api/Firebase.js":"6","/Volumes/Samsung_T5/Dev/React/scoreboard/src/State.js":"7","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Dashboard.js":"8","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/Navbar.js":"9","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/EmptyCard.js":"10","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/AddGame.js":"11"},{"size":221,"mtime":1610442671910,"results":"12","hashOfConfig":"13"},{"size":690,"mtime":1611551678500,"results":"14","hashOfConfig":"13"},{"size":2354,"mtime":1611553534730,"results":"15","hashOfConfig":"13"},{"size":396,"mtime":1610447038930,"results":"16","hashOfConfig":"13"},{"size":3328,"mtime":1610526538570,"results":"17","hashOfConfig":"13"},{"size":2139,"mtime":1611553248430,"results":"18","hashOfConfig":"13"},{"size":227,"mtime":1611553523140,"results":"19","hashOfConfig":"13"},{"size":582,"mtime":1612492598630,"results":"20","hashOfConfig":"13"},{"size":772,"mtime":1611553572130,"results":"21","hashOfConfig":"13"},{"size":425,"mtime":1612490044710,"results":"22","hashOfConfig":"13"},{"size":2768,"mtime":1612497466220,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13l0r70",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Samsung_T5/Dev/React/scoreboard/src/index.js",[],["52","53"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/App.js",["54","55"],"import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { RecoilRoot } from 'recoil';\n\nimport Login from './screens/Login.js';\nimport SignUp from './screens/SignUp';\nimport Dashboard from './screens/Dashboard';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Router >\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Login path=\"/\" exact />\n            <SignUp path=\"/SignUp\" />\n            <Dashboard path=\"/dashboard\" />\n          </Switch>\n        </div>\n\n      </Router>\n    </RecoilRoot>\n\n  );\n}\n\nexport default App;\n","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Login.js",["56","57"],"import React, { useState, useEffect } from 'react';\nimport '../css/Login.css';\nimport CustomButton from '../components/CustomButton';\nimport { useHistory } from 'react-router-dom';\nimport { IsLoggedIn, logUserIn } from '../api/Firebase';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\n\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const [user, setUser] = useRecoilState(userToken);\n\n    const login = () => {\n        logUserIn(username, password, (error) => {\n            setError('Error: ' + error.code + ' :: ' + error.message);\n        })\n    }\n\n    useEffect(() => {\n        IsLoggedIn(u => {\n            console.log(\"logged In user: \", u);\n            setUser(u);\n            history.push(\"/dashboard\")\n        }, () => {\n            console.log(\"no logged In user\");\n            setUser('none');\n            history.push(\"/\");\n        })\n    }, []);\n\n    const updateUsername = e => {\n        setUsername(e.target.value);\n        setError('');\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n        setError('');\n    }\n\n    const signUp = () => {\n        history.push('/SignUp');\n    }\n\n    let history = useHistory();\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-card\">\n                <div className=\"login-card-header\">\n                    <h3>Login</h3>\n                </div>\n\n                <div className=\"login-card-main\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" placeholder=\"Username\" value={username} onChange={updateUsername} />\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={updatePassword} />\n                    <CustomButton className=\"login-button\" width=\"50%\" onClick={login}>Login</CustomButton>\n                </div>\n\n                <div className=\"login-card-footer\">\n                    <p className=\"login-link\" onClick={signUp}>Sign up</p>\n                    <p className=\"login-error\">{error}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/CustomButton.js",["58","59"],"import React, { Children } from 'react';\nimport '../css/CustomButton.css';\n\nconst CustomButton = ({ children, width, onClick, className }) => {\n\n    const clicked = () => {\n        onClick();\n    }\n\n\n    return (\n        <div className={\"button-container\" + \" \" + className} style={{ width: width }} onClick={clicked} >\n            {children}\n        </div>\n    );\n}\n\nexport default CustomButton;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/SignUp.js",["60"],"import React, { useState } from 'react';\nimport '../css/SignUp.css';\nimport CustomButton from '../components/CustomButton';\nimport { useHistory } from 'react-router-dom';\nimport { createUser, createProfile } from '../api/Firebase';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\n\n\nconst SignUp = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirm, setConfirm] = useState('');\n    const [error, setError] = useState('');\n\n    const [user, setUser] = useRecoilState(userToken);\n    let history = useHistory();\n\n    const signup = () => {\n        //validation\n        if (validation() === 1) {\n            setError(\"Please fill all fields\");\n            return;\n        }\n        if (validation() === 2) {\n            setError(\"Both passwords must match\");\n            return;\n        }\n\n        //create the user\n        createUser(username, password, (myUser) => {\n\n            //save the user token globally\n            setUser(myUser);\n\n            //create Profile\n            let data = {\n                email: username,\n                imageUrl: \"no image set\"\n            };\n\n            createProfile(myUser.user.uid, data, docRef => {\n                //profile created\n                history.push(\"/\");\n            }, error => {\n                setError(\"Error creating profie\");\n                console.log(\"Profile Error: \", error);\n            });\n        }, error => {\n            //Handle any errors\n            setError(\"Error: \" + error.code + \" :: \" + error.message);\n\n\n        });\n    }\n\n    const updateUsername = e => {\n        setUsername(e.target.value);\n        setError('');\n    }\n\n    const updatePassword = e => {\n        setPassword(e.target.value);\n        setError('');\n    }\n\n    const updateConfirm = e => {\n        setConfirm(e.target.value);\n        setError('');\n    }\n\n    const validation = () => {\n        if (username.trim() === '') return 1;\n        if (password.trim() === '') return 1;\n        if (confirm.trim() === '') return 1;\n        if (confirm !== password) return 2;\n\n        return 0;\n    }\n\n    return (\n        <div className=\"signup-container\">\n            <div className=\"signup-card\">\n                <div className=\"signup-card-header\">\n                    <h3>Sign Up</h3>\n                </div>\n\n                <div className=\"signup-card-main\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" placeholder=\"Username\" value={username} onChange={updateUsername} />\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={updatePassword} />\n                    <label htmlFor=\"confirm\" >Confirm Password</label>\n                    <input id=\"confirm\" type=\"password\" placeholder=\"Confirm Password\" value={confirm} onChange={updateConfirm} />\n                    <CustomButton className=\"signup-button\" width=\"50%\" onClick={signup}>Sign Up</CustomButton>\n                </div>\n\n                <div className=\"signup-card-footer\">\n                    <p className=\"signup-error\">{error}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/api/Firebase.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/State.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/screens/Dashboard.js",["61"],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/Navbar.js",["62","63"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../css/Navbar.css';\nimport { userToken } from '../State';\nimport { useRecoilState } from 'recoil';\nimport { logUserOut } from '../api/Firebase';\n\nconst Navbar = () => {\n\n    const [user, setUser] = useRecoilState(userToken);\n\n    const location = useLocation();\n\n    let path = location.pathname;\n    path = path.replace(\"/\", \"\");\n    path = path.charAt(0).toUpperCase() + path.slice(1);\n\n    return (\n\n        <div className={user !== 'none' ? \"nav-container\" : \"nav-container hide\"}>\n            <p className=\"nav-item header\">{path}</p>\n            <p className=\"nav-item footer\" onClick={() => { logUserOut() }}>Logout</p>\n        </div>\n\n    );\n}\n\nexport default Navbar;","/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/EmptyCard.js",[],"/Volumes/Samsung_T5/Dev/React/scoreboard/src/components/AddGame.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":3,"nodeType":"70","messageId":"71","endLine":6,"endColumn":8},{"ruleId":"68","severity":1,"message":"72","line":7,"column":3,"nodeType":"70","messageId":"71","endLine":7,"endColumn":7},{"ruleId":"68","severity":1,"message":"73","line":15,"column":12,"nodeType":"70","messageId":"71","endLine":15,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":33,"column":8,"nodeType":"76","endLine":33,"endColumn":10,"suggestions":"77"},{"ruleId":"68","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":12,"column":44,"nodeType":"81","messageId":"82","endLine":12,"endColumn":45},{"ruleId":"68","severity":1,"message":"73","line":16,"column":12,"nodeType":"70","messageId":"71","endLine":16,"endColumn":16},{"ruleId":"68","severity":1,"message":"83","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"84","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"85","line":10,"column":18,"nodeType":"70","messageId":"71","endLine":10,"endColumn":25},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'Children' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'useState' is defined but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [history, setUser]",{"range":"91","text":"92"},[1010,1012],"[history, setUser]"]